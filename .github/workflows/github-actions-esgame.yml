name: 🚀 CI/CD - ESGames API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: 🔧 Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Configurar o Java 21
      - name: ☕ Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Build + Testes automatizados com Maven
      - name: 🧪 Build e Testes
        run: mvn -B clean verify

      # 4️⃣ Login no Docker Hub
      - name: 🔐 Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5️⃣ Build e push da imagem Docker
      - name: 🐳 Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/esgames-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/esgames-api:${{ github.run_number }}

      # 6️⃣ (Opcional) Deploy de Staging
      - name: 🚀 Deploy de Staging (simulado)
        run: echo "Deploy de staging concluído com sucesso no ambiente Docker."

      # 7️⃣ (Opcional) Deploy de Produção
      - name: 🌍 Deploy de Produção (simulado)
        if: github.ref == 'refs/heads/main'
        run: echo "Deploy de produção executado com sucesso."