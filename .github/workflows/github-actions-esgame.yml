name: 🚀 CI/CD - ESGames API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: 🔧 Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Configurar o Java 21
      - name: ☕ Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Executar testes unitários
      - name: 🧪 Executar testes unitários
        run: mvn test

      # 4️⃣ Gerar relatório de cobertura com JaCoCo
      - name: 📊 Gerar relatório de cobertura
        run: mvn jacoco:report

      # 5️⃣ Build do projeto
      - name: 🔨 Build do projeto
        run: mvn -B clean package -DskipTests

      # 6️⃣ Upload do relatório de cobertura
      - name: 📤 Upload relatório de cobertura
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
          retention-days: 30

      # 7️⃣ Exibir resumo da cobertura
      - name: 📈 Comentário com cobertura de código
        run: |
          echo "### 📊 Relatório de Cobertura de Testes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Testes executados com sucesso!" >> $GITHUB_STEP_SUMMARY
          echo "📁 Relatório JaCoCo disponível nos artefatos" >> $GITHUB_STEP_SUMMARY

      # 8️⃣ Login no Docker Hub
      - name: 🔐 Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 9️⃣ Build e push da imagem Docker
      - name: 🐳 Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/esgames-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/esgames-api:${{ github.run_number }}

      # 🔟 (Opcional) Deploy de Staging
      - name: 🚀 Deploy de Staging (simulado)
        run: echo "Deploy de staging concluído com sucesso no ambiente Docker."

      # 1️⃣1️⃣ (Opcional) Deploy de Produção
      - name: 🌍 Deploy de Produção (simulado)
        if: github.ref == 'refs/heads/main'
        run: echo "Deploy de produção executado com sucesso."